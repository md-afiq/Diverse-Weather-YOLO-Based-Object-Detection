# -*- coding: utf-8 -*-
"""Diverse-Weather-YOLO-Based-Object-Detection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qjlp5haQTaV48NGHqdjKifdhk0wMKTRl
"""

!pip install ultralytics
import ultralytics
ultralytics.checks()
from ultralytics import YOLO



from google.colab import drive
drive.mount('/content/drive')

df= '/content/drive/MyDrive/Traffic.S/Vehicle_Detection_Image_Dataset/data.yaml'



model = YOLO("yolov9e.yaml")
model = YOLO("yolov9e.pt")
model = YOLO("yolov9e.yaml").load("yolov9e.pt")

results = model.train(data=df, epochs=3, imgsz=640)

# Path to sample image
image_path = "/content/drive/MyDrive/Traffic.S/Vehicle_Detection_Image_Dataset/sample_image 06.jpg"

# Predict
results = model.predict(source=image_path, conf=0.4)

# Show the detection
results[0].show()

# Optional: Save annotated image
results[0].save(filename="/content/detected_sample.jpg")

# Path to sample image
image_path = "/content/drive/MyDrive/Traffic.S/Vehicle_Detection_Image_Dataset/foggy weather 01.jpg"

# Predict
results = model.predict(source=image_path, conf=0.4)

# Show the detection
results[0].show()

# Optional: Save annotated image
results[0].save(filename="/content/detected_sample.jpg")
# Path to sample image
image_path = "/content/drive/MyDrive/Traffic.S/Vehicle_Detection_Image_Dataset/foggy weather 02.webp"

# Predict
results = model.predict(source=image_path, conf=0.4)

# Show the detection
results[0].show()

# Optional: Save annotated image
results[0].save(filename="/content/detected_sample.jpg")

# Path to sample image
image_path = "/content/drive/MyDrive/Traffic.S/Vehicle_Detection_Image_Dataset/rainy weather 01.jpg"

# Predict
results = model.predict(source=image_path, conf=0.4)

# Show the detection
results[0].show()

# Optional: Save annotated image
results[0].save(filename="/content/detected_sample.jpg")

# Path to sample image
image_path = "/content/drive/MyDrive/Traffic.S/Vehicle_Detection_Image_Dataset/rainy weather 02.jpg"

# Predict
results = model.predict(source=image_path, conf=0.4)

# Show the detection
results[0].show()

# Optional: Save annotated image
results[0].save(filename="/content/detected_sample.jpg")

# Path to sample image
image_path = "/content/drive/MyDrive/Traffic.S/Vehicle_Detection_Image_Dataset/sample_image 06.jpg"

# Predict
results = model.predict(source=image_path, conf=0.4)

# Save annotated image directly to Drive
output_path = "/content/drive/MyDrive/Traffic.S/detected_sample.jpg"
results[0].save(filename=output_path)

print(f"✅ Annotated image saved to: {output_path}")

from ultralytics import YOLO
import os

# Create output folder in Drive
output_folder = "/content/drive/MyDrive/Traffic.S/detections"
os.makedirs(output_folder, exist_ok=True)

# Load model
model = YOLO("/content/yolov9e.pt")

# List of images you want to detect
image_paths = [
    "/content/drive/MyDrive/Traffic.S/Vehicle_Detection_Image_Dataset/sample_image 06.jpg",
    "/content/drive/MyDrive/Traffic.S/Vehicle_Detection_Image_Dataset/foggy weather 01.jpg",
    "/content/drive/MyDrive/Traffic.S/Vehicle_Detection_Image_Dataset/foggy weather 02.webp",
    "/content/drive/MyDrive/Traffic.S/Vehicle_Detection_Image_Dataset/rainy weather 01.jpg",
    "/content/drive/MyDrive/Traffic.S/Vehicle_Detection_Image_Dataset/rainy weather 02.jpg"
]

# Run detection for each image
for img_path in image_paths:
    results = model.predict(source=img_path, conf=0.4)

    # Create a unique name for the output
    img_name = os.path.basename(img_path)
    output_path = os.path.join(output_folder, f"detected_{img_name}")

    # Save the annotated image to Drive
    results[0].save(filename=output_path)

    print(f"✅ Saved: {output_path}")

print(" All images saved in:", output_folder)

from ultralytics import YOLO
import cv2

# Load YOLO model
model = YOLO("/content/yolov9e.pt")

# Open the video
video_path = "/content/drive/MyDrive/Traffic.S/Vehicle_Detection_Image_Dataset/videoplayback.mp4"
cap = cv2.VideoCapture(video_path)

# Output video save path
output_path = "/content/drive/MyDrive/Traffic.S/detectionsvideo/output_first_1000.mp4"
fourcc = cv2.VideoWriter_fourcc(*'mp4v')
fps = int(cap.get(cv2.CAP_PROP_FPS))
width = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))
height = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))
out = cv2.VideoWriter(output_path, fourcc, fps, (width, height))

# Frame counter
frame_count = 0
max_frames = 1000  # Limit to first 1000 frames

while cap.isOpened():
    ret, frame = cap.read()
    if not ret or frame_count >= max_frames:
        break

    # Run YOLO detection
    results = model.predict(frame, conf=0.5, verbose=True)
    annotated_frame = results[0].plot()

    # Save to output video
    out.write(annotated_frame)

    frame_count += 1

cap.release()
out.release()
print(f"✅ Saved first {max_frames} frames to {output_path}")

import shutil
import os

# Input and output paths
video_path = "/content/drive/MyDrive/Traffic.S/Vehicle_Detection_Image_Dataset/videoplayback.mp4"
output_path = "/content/drive/MyDrive/Traffic.S/detectionsvideo/vehicle_flow_output.mp4"

# Run detection
results = model.predict(source=video_path, save=True, conf=0.4, project="/content/detections", name="vehicle_output")

# Path where YOLO saves the video
yolo_output_video = "/content/detections/vehicle_output/videoplayback.mp4"

# Ensure target folder exists
final_save_path = "/content/drive/MyDrive/Traffic.S/detections"
os.makedirs(final_save_path, exist_ok=True)

# Copy the detected video to your desired folder
shutil.copy(yolo_output_video, os.path.join(final_save_path, "vehicle_flow_output.mp4"))

print(f"Video saved to: {os.path.join(final_save_path, 'vehicle_flow_output.mp4')}")

from ultralytics import YOLO
import cv2
from IPython.display import Video
import os

# 1️⃣ Load model
model_path = "/content/yolov9e.pt"  # your trained or pretrained weights
model = YOLO(model_path)

# 2️⃣ Input and output paths
video_path = "/content/drive/MyDrive/Traffic.S/Vehicle_Detection_Image_Dataset/videoplayback.mp4"
output_path = "/content/drive/MyDrive/Traffic.S/detectionsvideo/vehicle_flow_output.mp4"

os.makedirs(os.path.dirname(output_path), exist_ok=True)

# 3️⃣ Run detection on the video and save
results = model.predict(
    source=video_path,
    save=True,
    save_txt=True,
    save_conf=True,
    project=os.path.dirname(output_path),
    name="vehicle_flow"
)

# The predicted video will be saved inside:
# /content/drive/MyDrive/Traffic.S/detectionsvideo/vehicle_flow

# 4️⃣ Find the saved video path
predicted_video_path = os.path.join(os.path.dirname(output_path), "vehicle_flow", os.path.basename(video_path))

import shutil
import os

# Input and output paths
video_path = "/content/drive/MyDrive/Traffic.S/Vehicle_Detection_Image_Dataset/videoplayback.mp4"
output_path = "/content/drive/MyDrive/Traffic.S/detectionsvideo/vehicle_flow_output.mp4"

# Run detection
results = model.predict(source=video_path, save=True, conf=0.4, project="/content/detections", name="vehicle_output")

# Path where YOLO saves the video
yolo_output_video = "/content/detections/vehicle_output/videoplayback.mp4"

# Ensure target folder exists
final_save_path = "/content/drive/MyDrive/Traffic.S/detections"
os.makedirs(final_save_path, exist_ok=True)

# Copy the detected video to your desired folder
shutil.copy(yolo_output_video, os.path.join(final_save_path, "vehicle_flow_output.mp4"))

print(f"Video saved to: {os.path.join(final_save_path, 'vehicle_flow_output.mp4')}")